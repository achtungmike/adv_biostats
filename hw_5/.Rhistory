install.packages("ISwR")
?ISwR
?gl
?glm
no.yes <- c("No","Yes")
Smoking <- gl(2,1,8,no.yes)
Obesity <- gl(2,2,8,no.yes)
Snoring <- gl(2,4,8,no.yes)
Total <- c(60,17,8,2,187,85,51,23)
Hypertension <- c(5,2,1,0,35,13,15,8)
dat <- data.frame(Smoking,Obesity,Snoring,Total,Hypertension)
View(dat)
lapply(dat, class)
cbind(Hypertension, Total - Hypertension)
# Fit the model
glm(cbind(Hypertension, Total-Hypertension) ~ Smoking + Snoring + Obesity, data = Yourdata, family = binomial)
# Fit the model
glm(cbind(Hypertension, Total-Hypertension) ~ Smoking + Snoring + Obesity, data = dat, family = binomial)
#setwd("C:/Users/lapt3u/Box/UC/Fall_2018/BE7023_Adv_Biostats/adv_biostats/hw_5")
# Build DF
no.yes <- c("No","Yes")
Smoking <- gl(2,1,8,no.yes)
Obesity <- gl(2,2,8,no.yes)
Snoring <- gl(2,4,8,no.yes)
Total <- c(60,17,8,2,187,85,51,23)
Hypertension <- c(5,2,1,0,35,13,15,8)
dat <- data.frame(Smoking,Obesity,Snoring,Total,Hypertension)
# Fit the model
mod <- glm(cbind(Hypertension, Total-Hypertension) ~ Smoking + Snoring + Obesity, data = dat, family = binomial)
summary(dat)
summary(mod)
summary(mod)
mod$df.residual
mod$residuals
mod$deviance
# Now calculate p-value under null hypothesis
p <- pchisq(dev, dof, lower.tail = F)
# We can check the adequacy of the model using by doing a simple hypothesis test.
# Our null hypothesis is that the response probability (Hypertension) follows the
# logistic model laid out above in question 2.  The alternate hypothesis is simply
# that the response probability does not follow the logistic model laid out.
# Test this: If null hypothesis is true then the residual deviance has a chi-squared
# distribution with the stated degrees of freedom.
# Let's pull out residual deviance and degrees of freedom
# Residual deviance:
dev <- mod$deviance
round(dev, 3)
# Degrees of freedom
dof <- mod$df.residual
dof
# Now calculate p-value under null hypothesis
p <- pchisq(dev, dof, lower.tail = F)
round(p, 3)
# We can check the adequacy of the model using by doing a simple hypothesis test.
# Our null hypothesis is that the response probability (Hypertension) follows the
# logistic model laid out above in question 2.  The alternate hypothesis is simply
# that the response probability does not follow the logistic model laid out.
# Test this: If null hypothesis is true then the residual deviance has a chi-squared
# distribution with the stated degrees of freedom.
# Let's pull out residual deviance and degrees of freedom
# Residual deviance:
dev <- mod$deviance
paste("Residual Deviance: ",round(dev, 3))
# Degrees of freedom
dof <- mod$df.residual
paste("Degrees of Freedom: ", dof)
# Now calculate p-value under null hypothesis
p <- pchisq(dev, dof, lower.tail = F)
paste("P-value: ", round(p, 3))
# To calculate the odds ratio for each covariate we just take the
# calculated coefficient and reverse the natural log built into
# the model by raising e to the power of the coefficient for
# that covariate.
exp(mod$coefficients)
# To calculate the odds ratio for each covariate we just take the
# calculated coefficient and reverse the natural log built into
# the model by raising e to the power of the coefficient for
# that covariate.
or <- exp(mod$coefficients)
paste("Odds ratio of Hypertnesion when Smoking = Yes", round(or['Smoking'],3))
or
or["SmokingYes"]
paste("Odds ratio of Hypertnesion when Smoking = Yes: ", round(or["SmokingYes"],3))
paste("Odds ratio of Hypertnesion when Obesity = Yes: ", round(or["ObesityYes"],3))
paste("Odds ratio of Hypertnesion when Snoring = Yes: ", round(or["SnoringYes"],3))
# To calculate the odds ratio for each covariate we just take the
# calculated coefficient and reverse the natural log built into
# the model by raising e to the power of the coefficient for
# that covariate.
or <- exp(mod$coefficients)
paste("Odds raitio of Hypertension when")
paste("Smoking = Yes: ", round(or["SmokingYes"],3))
paste("Obesity = Yes: ", round(or["ObesityYes"],3))
paste("Snoring = Yes: ", round(or["SnoringYes"],3))
# We will calculate predicted probabilities for the data we used to fit the
# model, which is less than ideal, but its the only data we have.
pred <- predict(mod, newdata = dat, type = "response")
pred
# We can also classify each by using 0.5 as a cutoff, where hypertension = Yes
# if the predicted probability is greater than or equal to 0.5, otherwise
# hypertension = No
pred_class <- ifelse(pred >= 0.50, 1, 0)
pred_class
curve(exp(-2.378 - (0.068 * 1) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * 1) + (0.872 * 0) + (0.695 * 0))))
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))))
# Smoking = 1, Snoring = 0, Obesity = 0,
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))))
# Smoking = 1, Snoring = 1, Obesity = 0
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0))))
# Smoking = 1, Snoring = 0, Obesity = 0,
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))),
from = 0, to = 1, lwd = 2, col = "coral", ylim = c(0,1), xlim = c(0,1),
xlab = "Smoking Status", ylab = "Probability of Hypertension",
main = "Hypertension Probability based on Logistic Regression of 3 predictors")
# Smoking = 1, Snoring = 1, Obesity = 0
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0))))
# Smoking = 1, Snoring = 0, Obesity = 0,
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))),
from = 0, to = 1, lwd = 2, col = "coral", ylim = c(0,1), xlim = c(0,1),
xlab = "Smoking Status", ylab = "Probability of Hypertension",
main = "Hypertension Probability based on Logistic Regression of 3 predictors")
# Smoking = 1, Snoring = 1, Obesity = 0
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0))),
col = "blue", lwd = 2, add = T)
# Smoking = 1, Snoring = 0, Obesity = 0,
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))),
from = 0, to = 1, lwd = 2, col = "coral", ylim = c(0,1), xlim = c(0,1),
xlab = "Smoking Status", ylab = "Probability of Hypertension",
main = "Hypertension Probability based on Logistic Regression of 3 predictors")
# Smoking = 1, Snoring = 1, Obesity = 0
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0))),
col = "blue", lwd = 2, add = T)
# Smoking = 1, Snoring = 1, Obesity = 1
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 1)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 1))),
col = "green", lwd = 2, add = T)
# Smoking = 1, Snoring = 0, Obesity = 0,
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 0))),
from = 0, to = 1, lwd = 2, col = "coral", ylim = c(0,1), xlim = c(0,1),
xlab = "Smoking Status", ylab = "Probability of Hypertension",
main = "Hypertension Probability based on Logistic Regression of 3 predictors")
# Smoking = 1, Snoring = 1, Obesity = 0
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 0))),
col = "blue", lwd = 2, add = T)
# Smoking = 1, Snoring = 1, Obesity = 1
curve(exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 1)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 1) + (0.695 * 1))),
col = "green", lwd = 2, add = T)
# Smoking = 1, Snoring = 0, Obesity = 1
curve(exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 1)) /
(1 + exp(-2.378 - (0.068 * x) + (0.872 * 0) + (0.695 * 1))),
col = "red", lwd = 2, add = T)
